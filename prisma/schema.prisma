generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================
// USUARIO (Produtor Rural)
// ============================================
model Usuario {
  id                    String        @id @default(uuid())
  nome                  String
  email                 String        @unique
  senha                 String
  cpf                   String        @unique
  telefone              String?
  dataNascimento        DateTime?
  estadoCivil           String?
  conheceIFGoiano       Boolean       @default(false)
  conheceCursosTecnicos Boolean       @default(false)
  
  propriedades          Propriedade[]
  
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  
  @@map("usuarios")
}

// ============================================
// PROPRIEDADE (Fazenda)
// ============================================
model Propriedade {
  id                      String    @id @default(uuid())
  nome                    String
  localizacao             String
  coordenadas             String?
  tamanho                 Float
  unidadeMedida           String    @default("HECTARE")
  
  // Tipo de solo (booleanos)
  soloArenoso             Boolean   @default(false)
  soloArgiloso            Boolean   @default(false)
  soloComCascalhos        Boolean   @default(false)
  soloComPedras           Boolean   @default(false)
  soloDeVarzea            Boolean   @default(false)
  soloPlano               Boolean   @default(false)
  soloDeclivModerada      Boolean   @default(false)
  soloDeclivAcentuada     Boolean   @default(false)
  soloRaso                Boolean   @default(false)
  soloProfundo            Boolean   @default(false)
  
  // Bioinsumos
  conheceBioinsumos       Boolean   @default(false)
  utilizaBioinsumos       Boolean   @default(false)
  tiposBioinsumos         String[]
  resultadosBioinsumos    String?
  expectativasBioinsumos  String?
  
  usuarioId               String
  usuario                 Usuario   @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  
  culturas                Cultura[]
  
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
  
  @@map("propriedades")
}

// ============================================
// CULTURA (Plantação)
// ============================================
model Cultura {
  id                String        @id @default(uuid())
  tipoCultura       String
  area              Float
  unidadeMedida     String        @default("HECTARE")
  tipoManejo        String?
  conhecimento      String?
  
  // Pragas (referências da API externa)
  pragasIds         String[]
  pragasNomes       String[]
  
  propriedadeId     String
  propriedade       Propriedade   @relation(fields: [propriedadeId], references: [id], onDelete: Cascade)
  
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  
  @@map("culturas")
}